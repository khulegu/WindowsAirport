// <auto-generated />
using System;
using AirportLib.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirportLib.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("AirportLib.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedSeatNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCheckedIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId", "PassportNumber")
                        .IsUnique();

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FlightId = 1,
                            IsCheckedIn = false,
                            PassengerName = "Bold Dorj",
                            PassportNumber = "E1234567"
                        },
                        new
                        {
                            Id = 2,
                            FlightId = 1,
                            IsCheckedIn = false,
                            PassengerName = "Saruul Bat",
                            PassportNumber = "E7654321"
                        },
                        new
                        {
                            Id = 3,
                            FlightId = 2,
                            IsCheckedIn = false,
                            PassengerName = "Tuya Chimed",
                            PassportNumber = "P9876543"
                        });
                });

            modelBuilder.Entity("AirportLib.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivalCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartureCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalCity = "ICN",
                            ArrivalTime = new DateTime(2024, 5, 1, 14, 0, 0, 0, DateTimeKind.Utc),
                            DepartureCity = "ULN",
                            DepartureTime = new DateTime(2024, 5, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            FlightNumber = "OM297",
                            Status = 0,
                            TotalSeats = 20
                        },
                        new
                        {
                            Id = 2,
                            ArrivalCity = "ICN",
                            ArrivalTime = new DateTime(2024, 5, 1, 16, 0, 0, 0, DateTimeKind.Utc),
                            DepartureCity = "ULN",
                            DepartureTime = new DateTime(2024, 5, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FlightNumber = "KE868",
                            Status = 0,
                            TotalSeats = 30
                        });
                });

            modelBuilder.Entity("AirportLib.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Bold",
                            LastName = "Dorj",
                            PassportNumber = "E1234567"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Saruul",
                            LastName = "Bat",
                            PassportNumber = "E7654321"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Tuya",
                            LastName = "Chimed",
                            PassportNumber = "P9876543"
                        });
                });

            modelBuilder.Entity("AirportLib.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PassengerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PassengerId");

                    b.HasIndex("FlightId", "SeatNumber")
                        .IsUnique();

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("AirportLib.Models.Booking", b =>
                {
                    b.HasOne("AirportLib.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirportLib.Models.Seat", b =>
                {
                    b.HasOne("AirportLib.Models.Flight", "Flight")
                        .WithMany("Seats")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirportLib.Models.Passenger", "AssignedPassenger")
                        .WithMany()
                        .HasForeignKey("PassengerId");

                    b.Navigation("AssignedPassenger");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirportLib.Models.Flight", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
