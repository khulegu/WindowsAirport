<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAMgCAYAAADbcAZoAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAFoFJREFUeF7t3e1tW9kVheE0MLy7hCnBJagEdRB1EHcw7mDcgd2BpwOVoBJUgkpI
        cDM04pw5GpPiJbfI9TzA+ydBEoFEgLPmfvAf/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALg99acPVXVfVQ+T7tZ/f/zPAQAA/NQ6KHa73W/Lsjwuy/KyLMu/j+hpWZZv+2Hy6/jf
        DQAA8H10fHnD4PhZz1X1uzECAADh1vuq9lc6th4dr/W4Dp3x7wAAAG5Yw/AYW6+KGCIAAHDr1oP/OgAm
        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
        AAB476rqYXKYv7aMDwAAuBZV9WlyqL+WjA8AALg2V/pmLOMDAACuVVXdX9FvhDwbHwAAcOWu4e1YVfW4
        /p3j3w4AAFyh+tPX8eD/HlqfVxn/XgAA4Abs35D1Lq6G7K96uOUKAABu3f4tWV1DZH3W42H8mwAAgBu2
        PnNxySsiVfW0vplrvRds/FsAAIAg69uyqurbOBo2aH2t7uequhv/NwEAgHD7h9XXMbKOhsfJoPhZ6+BY
        n+0wOgAAgOOtD4qvY2K9XWt9dmRovaVq/dfXf99rdAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADg/fsPxwl2YiEnscEAAAAASUVORK5CYII=
</value>
  </data>
</root>